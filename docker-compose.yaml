# Use postgres/example user/password credentials
version: "3.9"

services:
  redis:
    image: redis
    container_name: redis_service
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: always

  postgres:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD_FILE=${POSTGRES_PASSWORD_FILE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    secrets:
      - db_password

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  app:
    image: app
    restart: "always"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - redis
      - postgres
    environment:
      - PORT=${PORT}
      - REDIS_PORT=${REDIS_PORT}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DBName=${POSTGRES_DB}
      - DBUser=${POSTGRES_USER}
      - POSTGRES_PASSWORD_FILE=${POSTGRES_PASSWORD_FILE}
      - JWT_SECRET_FILE=${JWT_SECRET_FILE}
    secrets:
      - db_password
      - jwt_secret

volumes:
  pgdata:
  redis_data:


secrets:
  db_password:
    file: postgres_password.txt
  jwt_secret:
    file: jwt_secret.txt
